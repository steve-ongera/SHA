# Generated by Django 5.2.4 on 2025-08-20 09:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(max_length=200)),
                ('brand_name', models.CharField(blank=True, max_length=200)),
                ('category', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('cream', 'Cream/Ointment'), ('drops', 'Drops'), ('inhaler', 'Inhaler'), ('other', 'Other')], max_length=20)),
                ('dosage_form', models.CharField(max_length=100)),
                ('manufacturer', models.CharField(max_length=200)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('requires_prescription', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('member', 'SHA Member'), ('hospital', 'Hospital Staff'), ('employer', 'Employer'), ('admin', 'SHA Administrator')], max_length=20)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('approval', 'Approval'), ('rejection', 'Rejection'), ('payment', 'Payment'), ('otp_generation', 'OTP Generation'), ('otp_verification', 'OTP Verification')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('tax_pin', models.CharField(max_length=20, unique=True)),
                ('industry', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('postal_address', models.CharField(max_length=200)),
                ('physical_address', models.TextField()),
                ('contact_person_name', models.CharField(max_length=200)),
                ('contact_person_phone', models.CharField(max_length=15)),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='pending', max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employers_approved', to=settings.AUTH_USER_MODEL)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.county')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GovernmentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('monthly_summary', 'Monthly Summary'), ('quarterly_summary', 'Quarterly Summary'), ('annual_summary', 'Annual Summary'), ('financial_report', 'Financial Report'), ('membership_report', 'Membership Report'), ('hospital_utilization', 'Hospital Utilization'), ('fraud_detection', 'Fraud Detection Report')], max_length=30)),
                ('report_period_start', models.DateField()),
                ('report_period_end', models.DateField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('report_data', models.JSONField()),
                ('report_file', models.FileField(blank=True, null=True, upload_to='government_reports/')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('hospital_type', models.CharField(choices=[('public', 'Public Hospital'), ('private', 'Private Hospital'), ('faith_based', 'Faith-Based Hospital'), ('ngo', 'NGO Hospital')], max_length=20)),
                ('level', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5'), (6, 'Level 6')])),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('postal_address', models.CharField(max_length=200)),
                ('physical_address', models.TextField()),
                ('license_number', models.CharField(max_length=100)),
                ('license_expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='pending', max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.county')),
            ],
        ),
        migrations.CreateModel(
            name='HospitalStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_number', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('pharmacist', 'Pharmacist'), ('clerk', 'Clerk'), ('administrator', 'Administrator'), ('other', 'Other')], max_length=20)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateField()),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='sha_application.hospital')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_number', models.CharField(max_length=50, unique=True)),
                ('visit_type', models.CharField(choices=[('consultation', 'Consultation'), ('emergency', 'Emergency'), ('referral', 'Referral'), ('follow_up', 'Follow-up'), ('admission', 'Admission')], max_length=20)),
                ('visit_date', models.DateTimeField()),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('check_out_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('checked_in', 'Checked In'), ('in_consultation', 'In Consultation'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('otp_verified', models.BooleanField(default=False)),
                ('otp_verified_at', models.DateTimeField(blank=True, null=True)),
                ('chief_complaint', models.TextField()),
                ('consultation_notes', models.TextField(blank=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('treatment_plan', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attending_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sha_application.hospitalstaff')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_visits', to='sha_application.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_number', models.CharField(max_length=50, unique=True)),
                ('claim_type', models.CharField(choices=[('consultation', 'Consultation'), ('treatment', 'Treatment'), ('medicine', 'Medicine'), ('procedure', 'Medical Procedure'), ('admission', 'Hospital Admission'), ('emergency', 'Emergency Care')], max_length=20)),
                ('amount_claimed', models.DecimalField(decimal_places=2, max_digits=12)),
                ('amount_approved', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid')], default='submitted', max_length=20)),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='claim_documents/')),
                ('rejection_reason', models.TextField(blank=True)),
                ('review_notes', models.TextField(blank=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='sha_application.hospital')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='sha_application.hospitalvisit')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('contribution_reminder', 'Contribution Reminder'), ('claim_update', 'Claim Update'), ('medicine_availability', 'Medicine Availability'), ('appointment_reminder', 'Appointment Reminder'), ('registration_approved', 'Registration Approved'), ('otp_code', 'OTP Code'), ('system_alert', 'System Alert')], max_length=30)),
                ('method', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('system', 'System Notification')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('email_address', models.EmailField(blank=True, max_length=254)),
                ('recipient_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('hospital_visit', 'Hospital Visit Verification'), ('medicine_collection', 'Medicine Collection'), ('account_verification', 'Account Verification'), ('password_reset', 'Password Reset')], max_length=30)),
                ('otp_code', models.CharField(max_length=6)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sha_application.hospital')),
            ],
        ),
        migrations.AddField(
            model_name='hospitalvisit',
            name='otp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sha_application.otp'),
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('dispensed', 'Dispensed'), ('partially_dispensed', 'Partially Dispensed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('prescribed_date', models.DateTimeField(auto_now_add=True)),
                ('dispensed_date', models.DateTimeField(blank=True, null=True)),
                ('collection_otp_verified', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('collection_otp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescription_collections', to='sha_application.otp')),
                ('dispensed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispensed_prescriptions', to='sha_application.hospitalstaff')),
                ('prescribed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='sha_application.hospitalstaff')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='sha_application.hospitalvisit')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_prescribed', models.IntegerField()),
                ('quantity_dispensed', models.IntegerField(default=0)),
                ('dosage_instructions', models.TextField()),
                ('duration_days', models.IntegerField()),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.medicine')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='sha_application.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='SHAMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('id_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='ID number must be 8 digits', regex='^\\d{8}$')])),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('postal_address', models.CharField(blank=True, max_length=200)),
                ('physical_address', models.TextField()),
                ('fingerprint_template', models.BinaryField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='member_photos/')),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='pending', max_length=20)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_members', to=settings.AUTH_USER_MODEL)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.county')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sha_member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='otp',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to='sha_application.shamember'),
        ),
        migrations.CreateModel(
            name='MemberDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_copy', 'ID Copy'), ('birth_certificate', 'Birth Certificate'), ('passport_photo', 'Passport Photo'), ('payslip', 'Payslip'), ('marriage_certificate', 'Marriage Certificate'), ('other', 'Other')], max_length=30)),
                ('document_file', models.FileField(upload_to='member_documents/')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='sha_application.shamember')),
            ],
        ),
        migrations.AddField(
            model_name='hospitalvisit',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_visits', to='sha_application.shamember'),
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcounties', to='sha_application.county')),
            ],
            options={
                'unique_together': {('county', 'name')},
            },
        ),
        migrations.AddField(
            model_name='shamember',
            name='subcounty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.subcounty'),
        ),
        migrations.AddField(
            model_name='hospital',
            name='subcounty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.subcounty'),
        ),
        migrations.CreateModel(
            name='PharmacyStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stock', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('minimum_stock_level', models.IntegerField(default=10)),
                ('maximum_stock_level', models.IntegerField(default=1000)),
                ('last_restocked_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateField()),
                ('batch_number', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pharmacy_stock', to='sha_application.hospital')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sha_application.medicine')),
            ],
            options={
                'unique_together': {('hospital', 'medicine', 'batch_number')},
            },
        ),
        migrations.CreateModel(
            name='EmployerMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.CharField(max_length=50)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('monthly_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('contribution_rate', models.DecimalField(decimal_places=2, default=Decimal('2.75'), max_digits=5)),
                ('date_joined', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='sha_application.employer')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employers', to='sha_application.shamember')),
            ],
            options={
                'unique_together': {('employer', 'member')},
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution_type', models.CharField(choices=[('individual', 'Individual'), ('employer', 'Employer'), ('government', 'Government Subsidy')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('contribution_month', models.DateField()),
                ('payment_date', models.DateTimeField()),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('bank', 'Bank Transfer'), ('cash', 'Cash'), ('payroll', 'Payroll Deduction')], max_length=20)),
                ('payment_reference', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('mpesa_transaction_id', models.CharField(blank=True, max_length=100)),
                ('mpesa_phone_number', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contributions', to='sha_application.employer')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='sha_application.shamember')),
            ],
            options={
                'unique_together': {('member', 'contribution_month')},
            },
        ),
    ]
